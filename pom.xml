<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>Sprint_7</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <!-- Указываем версию Java для компиляции проекта -->
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <!-- Устанавливаем кодировку исходных файлов проекта -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- JUnit 4 - библиотека для написания и запуска unit-тестов -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>

        <!-- RestAssured - библиотека для тестирования REST API, упрощает отправку HTTP-запросов и проверку ответов -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>5.3.0</version>
        </dependency>

        <!-- Hamcrest - библиотека для создания читаемых утверждений (assertions) в тестах -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>

        <!-- Allure Java Commons - основная библиотека для интеграции Allure с Java-проектами -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-java-commons</artifactId>
            <version>2.21.0</version>
        </dependency>

        <!-- Allure RestAssured - интеграция Allure с RestAssured для сбора данных о запросах и ответах в отчётах -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-rest-assured</artifactId>
            <version>2.21.0</version>
        </dependency>

        <!-- Allure JUnit 4 - интеграция Allure с JUnit 4 для создания отчётов о результатах тестов -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-junit4</artifactId>
            <version>2.22.0</version>
        </dependency>

        <!-- Jackson - библиотека для работы с JSON (сериализация и десериализация) -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Maven Surefire Plugin - плагин для запуска тестов во время сборки проекта -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <properties>
                        <property>
                            <!-- Указываем listener для интеграции Allure с JUnit 4 -->
                            <name>listener</name>
                            <value>io.qameta.allure.junit4.AllureJunit4</value>
                        </property>
                    </properties>
                    <systemPropertyVariables>
                        <!-- Указываем директорию для сохранения результатов Allure -->
                        <allure.results.directory>${project.build.directory}/allure-results</allure.results.directory>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <!-- Allure Maven Plugin - плагин для генерации отчётов Allure -->
            <plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>2.10.0</version>
                <configuration>
                    <!-- Указываем директорию для хранения результатов Allure -->
                    <resultsDirectory>${project.build.directory}/allure-results</resultsDirectory>
                    <!-- Указываем директорию для генерации отчётов Allure -->
                    <reportDirectory>${project.build.directory}/allure-report</reportDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>